{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/Navigation/Navigation.module.css","components/AuthNav/AuthNav.module.css","components/ContactList/ContactList.module.css","components/AppBar/AppBar.module.css","redux/auth/auth-selectors.js","components/Navigation/Navigation.js","components/AuthNav/AuthNav.js","redux/auth/auth-operations.js","components/UserMenu/default-avatar.bmp","components/UserMenu/UserMenu.js","components/AppBar/AppBar.js","views/HomeView.js","redux/contacts/contacts-actions.js","redux/contacts/contacts-operations.js","redux/contacts/contacts-selectors.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","views/ContactsView.js","views/RegisterView.js","views/LoginView.js","components/PrivateRoute.js","components/PublicRoute.js","App.js","reportWebVitals.js","redux/contacts/contacts-reducers.js","redux/auth/auth-slice.js","redux/store.js","index.js"],"names":["module","exports","authSelectors","getUserName","state","auth","user","name","getIsLoggedIn","isLoggedIn","getIsFetchingCurrent","isFetchingCurrentUser","Navigation","useSelector","to","exact","className","styles","link","activeClassName","activeLink","AuthNav","axios","defaults","baseURL","token","headers","common","Authorization","authOperations","register","createAsyncThunk","credentials","a","post","data","logIn","logOut","fetchCurrentUser","_","thunkAPI","getState","persistedToken","rejectWithValue","get","container","display","alignItems","avatar","marginRight","fontWeight","UserMenu","dispatch","useDispatch","style","src","defaultAvatar","alt","width","type","onClick","AppBar","header","HomeView","getContactsRequest","createAction","getContactsSuccess","getContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","filterContact","deleteContact","idForDelete","delete","then","catch","error","getContactsItem","contacts","item","getFilter","filter","getVisibleContacts","createSelector","normalizedFilter","toLowerCase","contact","includes","ContactForm","useState","setName","number","setNumber","contactsItem","selectors","handleChange","event","currentTarget","value","onSubmit","text","addContact","useEffect","s","form","preventDefault","find","alert","label","input","onChange","button","ContactList","formContact","map","id","formContactItem","formContactButton","propType","PropTypes","arrayOf","shape","string","onDeleteContact","func","Filter","console","log","target","ContactsView","flexDirection","marginBottom","RegisterView","email","setEmail","password","setPassword","e","Button","variant","color","LoginViews","PrivateRoute","children","redirectTo","routeProps","PublicRoute","restricted","shouldRedirect","App","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","itemReducer","createReducer","payload","filterReducer","loadingReducer","contactsReducer","combineReducers","loading","authSlice","createSlice","initialState","extraReducers","fulfilled","action","pending","rejected","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","persistReducer","authReducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e7638e68.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__4DevE\",\"label\":\"ContactForm_label__3xhHY\",\"input\":\"ContactForm_input__79zao\",\"button\":\"ContactForm_button__1Drly\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"Navigation_link__3ZSex\",\"activeLink\":\"Navigation_activeLink__5vEJC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"AuthNav_link__WYNCn\",\"activeLink\":\"AuthNav_activeLink__4Fc4d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formContact\":\"ContactList_formContact__3fGrb\",\"formContactItem\":\"ContactList_formContactItem__13kre\",\"formContactButton\":\"ContactList_formContactButton__3S144\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"AppBar_header__3q77P\"};","const getUserName = (state) => state.auth.user.name;\r\nconst getIsLoggedIn = (state) => state.auth.isLoggedIn;\r\nconst getIsFetchingCurrent = (state) => state.auth.isFetchingCurrentUser;\r\n\r\nconst authSelectors = { getUserName, getIsLoggedIn, getIsFetchingCurrent };\r\nexport default authSelectors;\r\n","import { useSelector } from \"react-redux\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nimport authSelectors from \"../../redux/auth/auth-selectors\";\r\nimport styles from \"./Navigation.module.css\";\r\n\r\nexport default function Navigation() {\r\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\r\n\r\n  return (\r\n    <nav>\r\n      <NavLink\r\n        to=\"/\"\r\n        exact\r\n        className={styles.link}\r\n        activeClassName={styles.activeLink}\r\n      >\r\n        Головна\r\n      </NavLink>\r\n\r\n      {isLoggedIn && (\r\n        <NavLink\r\n          to=\"/contacts\"\r\n          exact\r\n          className={styles.link}\r\n          activeClassName={styles.activeLink}\r\n        >\r\n          Контакти\r\n        </NavLink>\r\n      )}\r\n    </nav>\r\n  );\r\n}\r\n","import { NavLink } from \"react-router-dom\";\r\nimport styles from \"./AuthNav.module.css\";\r\n\r\nexport default function AuthNav() {\r\n  return (\r\n    <div>\r\n      <NavLink\r\n        to=\"/register\"\r\n        exact\r\n        className={styles.link}\r\n        activeClassName={styles.activeLink}\r\n      >\r\n        Реєстрація\r\n      </NavLink>\r\n\r\n      <NavLink\r\n        to=\"/login\"\r\n        exact\r\n        className={styles.link}\r\n        activeClassName={styles.activeLink}\r\n      >\r\n        Логін\r\n      </NavLink>\r\n    </div>\r\n  );\r\n}\r\n","import axios from \"axios\";\r\nimport { createAsyncThunk } from \"@reduxjs/toolkit\";\r\n\r\naxios.defaults.baseURL = \"https://goit-phonebook-api.herokuapp.com\";\r\n\r\nconst token = {\r\n  set(token) {\r\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n  },\r\n  unset() {\r\n    axios.defaults.headers.common.Authorization = \"\";\r\n  },\r\n};\r\n\r\nconst register = createAsyncThunk(\"auth/register\", async (credentials) => {\r\n  try {\r\n    const { data } = await axios.post(\"/users/signup\", credentials);\r\n    token.set(data.token);\r\n    // console.log(\"!!!data in register\", data);\r\n    return data;\r\n  } catch (error) {\r\n    //Добавить обработку ошибки error.message\r\n  }\r\n});\r\n\r\nconst logIn = createAsyncThunk(\"auth/login\", async (credentials) => {\r\n  try {\r\n    const { data } = await axios.post(\"/users/login\", credentials);\r\n    token.set(data.token);\r\n    // console.log(\"!!!data in logIn\", data);\r\n    return data;\r\n  } catch (error) {\r\n    //Добавить обработку ошибки error.message\r\n  }\r\n});\r\n\r\nconst logOut = createAsyncThunk(\"auth/logout\", async () => {\r\n  try {\r\n    await axios.post(\"/users/logout\");\r\n    token.unset();\r\n  } catch (error) {\r\n    //Добавить обработку ошибки error.message\r\n  }\r\n});\r\n\r\nconst fetchCurrentUser = createAsyncThunk(\r\n  \"auth/refresh\",\r\n  async (_, thunkAPI) => {\r\n    const state = thunkAPI.getState();\r\n    const persistedToken = state.auth.token;\r\n\r\n    if (persistedToken === null) {\r\n      return thunkAPI.rejectWithValue();\r\n    }\r\n    token.set(persistedToken);\r\n    try {\r\n      const { data } = await axios.get(\"/users/current\");\r\n      return data;\r\n    } catch (error) {\r\n      //Добавить обработку ошибки error.message\r\n    }\r\n  }\r\n);\r\n\r\nconst authOperations = {\r\n  register,\r\n  logIn,\r\n  logOut,\r\n  fetchCurrentUser,\r\n};\r\nexport default authOperations;\r\n","export default __webpack_public_path__ + \"static/media/default-avatar.1c69306b.bmp\";","import { useSelector, useDispatch } from \"react-redux\";\r\nimport authSelectors from \"../../redux/auth/auth-selectors\";\r\nimport authOperations from \"../../redux/auth/auth-operations\";\r\nimport defaultAvatar from \"./default-avatar.bmp\";\r\n\r\nconst styles = {\r\n  container: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    marginRight: 4,\r\n  },\r\n  name: {\r\n    fontWeight: 700,\r\n    marginRight: 12,\r\n  },\r\n};\r\n\r\nexport default function UserMenu() {\r\n  const name = useSelector(authSelectors.getUserName);\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <div style={styles.container}>\r\n      <img src={defaultAvatar} alt=\"\" width=\"32\" style={styles.avatar} />\r\n      <span style={styles.name}>Ласкаво просимо, {name || \"\"}</span>\r\n      <button type=\"button\" onClick={() => dispatch(authOperations.logOut())}>\r\n        Вийти\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n","import { useSelector } from \"react-redux\";\r\n\r\nimport Navigation from \"../Navigation\";\r\nimport AuthNav from \"../AuthNav\";\r\nimport UserMenu from \"../UserMenu\";\r\nimport authSelectors from \"../../redux/auth/auth-selectors\";\r\n\r\nimport styles from \"./AppBar.module.css\";\r\n\r\nexport default function AppBar() {\r\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\r\n\r\n  return (\r\n    <header className={styles.header}>\r\n      <Navigation />\r\n\r\n      {isLoggedIn ? <UserMenu /> : <AuthNav />}\r\n    </header>\r\n  );\r\n}\r\n","export default function HomeView() {\r\n    return (\r\n        <h2>\r\n            Вітаємо на головній сторінці!\r\n        </h2>\r\n    )\r\n}","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nexport const getContactsRequest = createAction(\"Contact/getContactsRequest\");\r\nexport const getContactsSuccess = createAction(\"Contact/getContactsSuccess\");\r\nexport const getContactsError = createAction(\"Contact/getContactsError\");\r\n\r\nexport const addContactRequest = createAction(\"Contact/addContactRequest\");\r\nexport const addContactSuccess = createAction(\"Contact/addContactSuccess\");\r\nexport const addContactError = createAction(\"Contact/addContactError\");\r\n\r\nexport const deleteContactRequest = createAction(\r\n  \"Contact/deleteContactRequest\"\r\n);\r\nexport const deleteContactSuccess = createAction(\r\n  \"Contact/deleteContactSuccess\"\r\n);\r\nexport const deleteContactError = createAction(\"Contact/deleteContactError\");\r\n\r\nexport const filterContact = createAction(\"Contact/ChangeFilter\");\r\n","import { createAction } from \"@reduxjs/toolkit\";\r\nimport shortid from \"shortid\";\r\nimport axios from \"axios\";\r\n\r\nimport { fetchAddNewContact } from \"../Api\";\r\n\r\nimport {\r\n  getContactsRequest,\r\n  getContactsSuccess,\r\n  getContactsError,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n} from \"./contacts-actions\";\r\n\r\n// axios.defaults.baseURL = \"http://localhost:4040\";\r\n\r\nexport const getContacts = () => (dispatch) => {\r\n  dispatch(getContactsRequest());\r\n\r\n  axios\r\n    .get(\"/contacts\")\r\n    .then(({ data }) => dispatch(getContactsSuccess(data)))\r\n    .catch((error) => dispatch(getContactsError(error)));\r\n};\r\n\r\nexport const addContact = ({ name, number }) => (dispatch) => {\r\n  dispatch(addContactRequest());\r\n\r\n  const contact = {\r\n    name: name,\r\n    number: number,\r\n  };\r\n\r\n  axios\r\n    .post(\"/contacts\", contact)\r\n    .then(({ data }) => dispatch(addContactSuccess(data)))\r\n    .catch((error) => dispatch(addContactError(error)));\r\n};\r\n\r\n// export const addContact = (name, number) => async (dispatch) => {\r\n//   dispatch(addContactRequest());\r\n//   try {\r\n//     const contact = {\r\n//       name: name,\r\n//       number: number,\r\n//     };\r\n//     await fetchAddNewContact(contact);\r\n//     dispatch(addContactSuccess(contact));\r\n//   } catch (error) {\r\n//     dispatch(addContactError(error));\r\n//   }\r\n// };\r\n\r\nexport const deleteContact = (idForDelete) => (dispatch) => {\r\n  dispatch(deleteContactRequest());\r\n\r\n  axios\r\n    .delete(`/contacts/${idForDelete}`)\r\n    .then(() => dispatch(deleteContactSuccess(idForDelete)))\r\n    .catch((error) => dispatch(deleteContactError(error)));\r\n};\r\n\r\nexport default { deleteContact };\r\n","import { createSelector } from \"@reduxjs/toolkit\";\r\n\r\nconst getContactsItem = (state) => state.contacts.item;\r\nconst getFilter = (state) => state.contacts.filter;\r\n// const getIsLoggedIn = (state) => state.contacts.loading;\r\nconst getVisibleContacts = createSelector(\r\n  [getContactsItem, getFilter],\r\n  (contacts, filter) => {\r\n    const normalizedFilter = filter.toLowerCase();\r\n    return contacts.filter((contact) =>\r\n      contact.name.toLowerCase().includes(normalizedFilter)\r\n    );\r\n  }\r\n);\r\n\r\nexport default {\r\n  getContactsItem,\r\n  getFilter,\r\n  getVisibleContacts,\r\n  // getIsLoggedIn,\r\n};\r\n","import { useState, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport {\r\n  addContact,\r\n  getContacts,\r\n} from \"../../redux/contacts/contacts-operations\";\r\nimport s from \"./ContactForm.module.css\";\r\nimport selectors from \"../../redux/contacts/contacts-selectors\";\r\n\r\nfunction ContactForm() {\r\n  const [name, setName] = useState(\"\");\r\n  const [number, setNumber] = useState(\"\");\r\n\r\n  const contactsItem = useSelector(selectors.getContactsItem);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleChange = (event) => {\r\n    switch (event.currentTarget.name) {\r\n      case \"name\":\r\n        setName(event.currentTarget.value);\r\n        break;\r\n\r\n      case \"number\":\r\n        setNumber(event.currentTarget.value);\r\n        break;\r\n\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const onSubmit = (text) => dispatch(addContact(text));\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    const contact = { name, number };\r\n    contactsItem.find((item) => item.name.toLowerCase() === name.toLowerCase())\r\n      ? alert(`${name} is already in contacts.`)\r\n      : onSubmit(contact);\r\n    setName(\"\");\r\n    setNumber(\"\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(getContacts());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <form className={s.form} onSubmit={handleSubmit}>\r\n      <label className={s.label}>\r\n        Name\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          className={s.input}\r\n          value={name}\r\n          onChange={handleChange}\r\n        ></input>\r\n      </label>\r\n\r\n      <label className={s.label}>\r\n        Number\r\n        <input\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          className={s.input}\r\n          value={number}\r\n          onChange={handleChange}\r\n        ></input>\r\n      </label>\r\n\r\n      <button type=\"submit\" className={s.button}>\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default ContactForm;\r\n","import { useDispatch, useSelector } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { deleteContact } from \"../../redux/contacts/contacts-operations\";\r\nimport s from \"./ContactList.module.css\";\r\nimport selectors from \"../../redux/contacts/contacts-selectors\";\r\n\r\nfunction ContactList() {\r\n  const contacts = useSelector(selectors.getVisibleContacts);\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <ul className={s.formContact}>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <li key={id} className={s.formContactItem}>\r\n          {name}: {number}\r\n          <button\r\n            className={s.formContactButton}\r\n            type=\"button\"\r\n            onClick={() => dispatch(deleteContact(id))}\r\n          >\r\n            Delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nexport default ContactList;\r\n\r\nContactList.propType = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string,\r\n      name: PropTypes.string,\r\n      number: PropTypes.string,\r\n    })\r\n  ),\r\n  onDeleteContact: PropTypes.func,\r\n};\r\n","import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport selectors from \"../../redux/contacts/contacts-selectors\";\r\nimport { filterContact } from \"../../redux/contacts/contacts-actions\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction Filter() {\r\n  const value = useSelector(selectors.getFilter);\r\n  const dispatch = useDispatch();\r\n  const onChange = ({ target }) => dispatch(filterContact(target.value));\r\n  console.log(value);\r\n\r\n  return <input type=\"text\" value={value} onChange={onChange}></input>;\r\n}\r\nexport default Filter;\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n};\r\n","import ContactForm from \"../components/ContactForm\";\r\nimport ContactList from \"../components/ContactList\";\r\nimport Filter from \"../components/Filter\";\r\n\r\nexport default function ContactsView() {\r\n  return (\r\n    <>\r\n      <h2>Контакти</h2>\r\n\r\n      <h3>Phonebook</h3>\r\n      <ContactForm />\r\n\r\n      <h3>Find contacts by name</h3>\r\n      <Filter />\r\n\r\n      <h2>Contacts</h2>\r\n      <ContactList />\r\n    </>\r\n  );\r\n}\r\n","import { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport authOperations from \"../redux/auth/auth-operations\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst styles = {\r\n  form: {\r\n    width: 320,\r\n  },\r\n  label: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    marginBottom: 15,\r\n  },\r\n};\r\n\r\nexport default function RegisterView() {\r\n  const dispatch = useDispatch();\r\n  const [name, setName] = useState();\r\n  const [email, setEmail] = useState();\r\n  const [password, setPassword] = useState();\r\n\r\n  const handleChange = ({ target: { name, value } }) => {\r\n    switch (name) {\r\n      case \"name\":\r\n        return setName(value);\r\n      case \"email\":\r\n        return setEmail(value);\r\n      case \"password\":\r\n        return setPassword(value);\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    dispatch(authOperations.register({ name, email, password }));\r\n    setName(\"\");\r\n    setEmail(\"\");\r\n    setPassword(\"\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Сторінка реєстрації</h1>\r\n\r\n      <form onSubmit={handleSubmit} style={styles.form}>\r\n        <label style={styles.label}>\r\n          Ім'я\r\n          <input type=\"text\" name=\"name\" value={name} onChange={handleChange} />\r\n        </label>\r\n\r\n        <label style={styles.label}>\r\n          Пошта\r\n          <input\r\n            type=\"email\"\r\n            name=\"email\"\r\n            value={email}\r\n            onChange={handleChange}\r\n          />\r\n        </label>\r\n\r\n        <label style={styles.label}>\r\n          Пароль\r\n          <input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            value={password}\r\n            onChange={handleChange}\r\n          />\r\n        </label>\r\n\r\n        <Button type=\"submit\" variant=\"contained\" color=\"primary\">\r\n          Зареєструватися\r\n        </Button>\r\n        {/* <button type=\"submit\">Зареєструватися</button> */}\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","import { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport authOperations from \"../redux/auth/auth-operations\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst styles = {\r\n  form: {\r\n    width: 320,\r\n  },\r\n  label: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    marginBottom: 15,\r\n  },\r\n};\r\n\r\nexport default function LoginViews() {\r\n  const dispatch = useDispatch();\r\n  const [email, setEmail] = useState();\r\n  const [password, setPassword] = useState();\r\n\r\n  const handleChange = ({ target: { name, value } }) => {\r\n    switch (name) {\r\n      case \"email\":\r\n        return setEmail(value);\r\n      case \"password\":\r\n        return setPassword(value);\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    dispatch(authOperations.logIn({ email, password }));\r\n    setEmail(\"\");\r\n    setPassword(\"\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Сторінка логіна</h1>\r\n\r\n      <form style={styles.form} onSubmit={handleSubmit}>\r\n        <label style={styles.label}>\r\n          Пошта\r\n          <input\r\n            type=\"email\"\r\n            name=\"email\"\r\n            value={email}\r\n            onChange={handleChange}\r\n          />\r\n        </label>\r\n\r\n        <label style={styles.label}>\r\n          Пароль\r\n          <input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            value={password}\r\n            onChange={handleChange}\r\n          />\r\n        </label>\r\n\r\n        <Button type=\"submit\" variant=\"contained\" color=\"primary\">\r\n          Увійти\r\n        </Button>\r\n        {/* <button type=\"submit\">Увійти</button> */}\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","import { Redirect, Route } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport authSelectors from \"../redux/auth/auth-selectors\";\r\n\r\nexport default function PrivateRoute({\r\n  children,\r\n  redirectTo = \"/login\",\r\n  ...routeProps\r\n}) {\r\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\r\n  return (\r\n    <Route {...routeProps}>\r\n      {isLoggedIn ? children : <Redirect to={redirectTo} />}\r\n    </Route>\r\n  );\r\n}\r\n","import { Redirect, Route } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport authSelectors from \"../redux/auth/auth-selectors\";\r\n\r\nexport default function PublicRoute({\r\n  children,\r\n  restricted = false,\r\n  ...routeProps\r\n}) {\r\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\r\n  const shouldRedirect = isLoggedIn && restricted;\r\n\r\n  return (\r\n    <Route {...routeProps}>\r\n      {shouldRedirect ? <Redirect to=\"/contacts\" /> : children}\r\n    </Route>\r\n  );\r\n}\r\n","import { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport { Switch, Route } from \"react-router-dom\";\r\n\r\nimport AppBar from \"./components/AppBar\";\r\nimport HomeView from \"./views/HomeView\";\r\nimport ContactsView from \"./views/ContactsView\";\r\nimport RegisterView from \"./views/RegisterView\";\r\nimport LoginView from \"./views/LoginView\";\r\nimport authOperations from \"./redux/auth/auth-operations\";\r\nimport authSelectors from \"./redux/auth/auth-selectors\";\r\n\r\nimport PrivateRoute from \"./components/PrivateRoute\";\r\nimport PublicRoute from \"./components/PublicRoute\";\r\n\r\nimport \"./App.css\";\r\n\r\nfunction App() {\r\n  const dispatch = useDispatch();\r\n  const isFetchingCurrentUser = useSelector(authSelectors.getIsFetchingCurrent);\r\n\r\n  useEffect(() => {\r\n    dispatch(authOperations.fetchCurrentUser());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    !isFetchingCurrentUser && (\r\n      <>\r\n        <AppBar />\r\n\r\n        <Switch>\r\n          {/* <Route path=\"/\" exact>\r\n          <HomeView />\r\n        </Route> */}\r\n          <PublicRoute path=\"/\" exact>\r\n            <HomeView />\r\n          </PublicRoute>\r\n\r\n          {/* <Route path=\"/contacts\" exact>\r\n          <ContactsView />\r\n        </Route> */}\r\n          <PrivateRoute path=\"/contacts\" exact redirectTo=\"/login\">\r\n            <ContactsView />\r\n          </PrivateRoute>\r\n\r\n          {/* <Route path=\"/register\" exact>\r\n          <RegisterView />\r\n        </Route> */}\r\n          <PublicRoute path=\"/register\" exact restricted>\r\n            <RegisterView />\r\n          </PublicRoute>\r\n\r\n          {/* <Route path=\"/login\" exact>\r\n          <LoginView />\r\n        </Route> */}\r\n          <PublicRoute path=\"/login\" exact restricted>\r\n            <LoginView />\r\n          </PublicRoute>\r\n        </Switch>\r\n      </>\r\n    )\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { createStore, combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\n\r\nimport {\r\n  getContactsRequest,\r\n  getContactsSuccess,\r\n  getContactsError,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactError,\r\n  deleteContactSuccess,\r\n  filterContact,\r\n} from \"./contacts-actions\";\r\n\r\nconst contacts = {\r\n  items: [],\r\n  filter: \"\",\r\n  loading: false,\r\n};\r\n\r\nconst itemReducer = createReducer(contacts.items, {\r\n  [getContactsSuccess]: (state, { payload }) => payload,\r\n  [addContactSuccess]: (state, { payload }) => [payload, ...state],\r\n  [deleteContactSuccess]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst filterReducer = createReducer(\"\", {\r\n  [filterContact]: (_, { payload }) => payload,\r\n});\r\n\r\nexport const loadingReducer = createReducer(false, {\r\n  [getContactsRequest]: () => true,\r\n  [getContactsSuccess]: () => false,\r\n  [getContactsError]: () => false,\r\n\r\n  [addContactRequest]: () => true,\r\n  [addContactSuccess]: () => false,\r\n  [addContactError]: () => false,\r\n\r\n  [deleteContactRequest]: () => true,\r\n  [deleteContactSuccess]: () => false,\r\n  [deleteContactError]: () => false,\r\n});\r\n\r\nexport const contactsReducer = combineReducers({\r\n  item: itemReducer,\r\n  filter: filterReducer,\r\n  loading: loadingReducer,\r\n});\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nimport authOperations from \"./auth-operations\";\r\nconst initialState = {\r\n  user: { name: null, email: null },\r\n  token: null,\r\n  isLoggedIn: false,\r\n  isFetchingCurrentUser: false,\r\n};\r\n\r\nconst authSlice = createSlice({\r\n  name: \"auth\",\r\n  initialState,\r\n  extraReducers: {\r\n    [authOperations.register.fulfilled](state, action) {\r\n      // console.log(\"!!!state in auth-slice\", state);\r\n      console.log(\"!!!action register in auth-slice\", action);\r\n\r\n      state.user = action.payload.user;\r\n      state.token = action.payload.token;\r\n      state.isLoggedIn = true;\r\n    },\r\n    [authOperations.logIn.fulfilled](state, action) {\r\n      // console.log(\"!!!state in auth-slice\", state);\r\n      // console.log(\"!!!state.auth in auth-slice\", state.auth);\r\n      // console.log(\"!!!action login in auth-slice\", action);\r\n      state.user = action.payload.user;\r\n      state.token = action.payload.token;\r\n      state.isLoggedIn = true;\r\n    },\r\n\r\n    [authOperations.logOut.fulfilled](state, action) {\r\n      state.user = { name: null, email: null };\r\n      state.token = null;\r\n      state.isLoggedIn = false;\r\n    },\r\n\r\n    [authOperations.fetchCurrentUser.pending](state) {\r\n      state.isFetchingCurrentUser = true;\r\n    },\r\n    [authOperations.fetchCurrentUser.fulfilled](state, action) {\r\n      state.user = action.payload;\r\n      state.isLoggedIn = true;\r\n      state.isFetchingCurrentUser = false;\r\n    },\r\n    [authOperations.fetchCurrentUser.rejected](state) {\r\n      state.isFetchingCurrentUser = false;\r\n    },\r\n  },\r\n});\r\nexport default authSlice.reducer;\r\n","import { createStore, combineReducers } from \"redux\";\r\nimport logger from \"redux-logger\";\r\nimport {\r\n  configureStore,\r\n  createReducer,\r\n  getDefaultMiddleware,\r\n} from \"@reduxjs/toolkit\";\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\nimport { contactsReducer } from \"./contacts/contacts-reducers\";\r\nimport authReducer from \"../redux/auth/auth-slice\";\r\n\r\nimport selectors from \"./contacts/contacts-selectors\";\r\n\r\n// console.log(\"!!!getVisibleContacts\", selectors.getVisibleContacts());\r\n// import server from \"../../db.json\";\r\n\r\n// import { ADDCONTACT, DELCONTACT, FINDCONTACT } from \"./contact-types\";\r\n// import { composeWithDevTools } from \"redux-devtools-extension\";\r\n\r\n// console.log(server.contacts);\r\n\r\n// const itemReducer = (state = contacts.items, { type, payload }) => {\r\n//   switch (type) {\r\n//     case ADDCONTACT:\r\n//       return [payload, ...state];\r\n//     case DELCONTACT:\r\n//       return state.filter(({ id }) => id !== payload);\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n\r\n// const filterReducer = (state = contacts.filter, { type, payload }) => {\r\n//   switch (type) {\r\n//     case FINDCONTACT:\r\n//       return payload;\r\n\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n];\r\n\r\nconst authPersistConfig = {\r\n  key: \"auth\",\r\n  storage,\r\n  whitelist: [\"token\"],\r\n};\r\n\r\n// const rootRedusers = combineReducers({\r\n//   contacts: persistReducer(persistConfig, contactsReducer),\r\n// });\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    contacts: contactsReducer,\r\n    auth: persistReducer(authPersistConfig, authReducer),\r\n    // auth: authReducer,\r\n  },\r\n  middleware: middleware,\r\n  devTools: process.env.NODE_ENV === \"development\",\r\n});\r\n\r\n// console.log(\"!!!STORE.state\", store.getState());\r\n\r\nexport const persistor = persistStore(store);\r\n\r\n// export default store;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { PersistGate } from \"redux-persist/integration/react\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nimport { store, persistor } from \"./redux/store\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <PersistGate loading={null} persistor={persistor}>\r\n        <BrowserRouter>\r\n          <App />\r\n        </BrowserRouter>\r\n      </PersistGate>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}